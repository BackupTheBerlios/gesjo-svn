#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module finestres.py
# Autogenerated from finestres.glade
# Generated on Tue Sep  6 10:57:17 2005

# Warning: Do not modify any context comment such as #--
# They are required to keep user's code

import os

import gtk

from SimpleGladeApp import AppBase
from SimpleGladeApp import bindtextdomain

app_name = "gesjo"
app_version = "0.0.1"

glade_dir = ""
locale_dir = ""

bindtextdomain(app_name, locale_dir)

##
# PAGINES / PESTANYES
##
PAG_CLIENT = 0
PAG_ARREGLOS = 1
PAG_FACTURES = 2
PAG_INFORMES = 3



class Frmgesjo(AppBase):

    def __init__(self, path="finestres.glade",
                 root="frmgesjo",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        AppBase.__init__(self, path, root, domain, **kwargs)

        for w in ["imatge_informes", "imatge_factures", "imatge_taller", "imatge_arreglos", "imatge_clients"]:
            wid = self.get_widget(w)
            print "W %s WID %s " % (w,wid.name)
            print "icon "+ str(wid.get_icon_name())
            wid.set_from_file("pixmaps/"+w.strip("imatge_")+".png")



    #-- Frmgesjo.new {
    def new(self):
        print "A new %s has been created" % self.__class__.__name__
        #Miram per provar
        self.bt_client_primer.set_sensitive( True )

    #-- Frmgesjo.new }

    #-- Frmgesjo custom methods {

    def nou_formulari(self,widget):
        """
        Activa, (posa a editable a Vertader) els camps del formulari i els neteja de contingut
        """

        nom = widget.get_name().split("_")[1]
        camps = [ w for w in self.get_widgets() if w.name.startswith(nom+"___") ]

        for c in camps:
            c.set_editable( True )
            print "POSAM %s --> True" % (c.name)

            if ( type(c) is gtk.TextView ):
                # Tractam a part el cas del TextView, no te camp Text, sino un buffer
                buff = c.get_buffer()
                buff.delete( buff.get_start_iter(), buff.get_end_iter() )
                continue

            if (type(c) is gtk.Image):
                # Es una imatge, tambe la tractam apart.
                c.set_from_icon_set(None, None)
                continue

            #Els demes casos
            c.set_text("")


    def activa_camps_formularis(self,widget):
         """
         Activa els camps (posa Editable a Vertader).
         """
         nom = widget.get_name().split("___")[0]

         camps = [ w for w in self.get_widgets() if w.name.startswith(nom+"___") ]
         for c in camps:
             c.set_editable( True )


    def comprova_camps_buits_formularis(self, widget):
        """
        Comprova que els camps del formulari estiguin completament omplits.
        Si hi estan mostra el boto de Aceptar, sino no el mostra
        """

        nom = widget.get_name().split("___")[0]

        camps_comprovar = [ w for w in self.get_widgets() if w.name.startswith(nom+"___") ]
        tenim = False
        for c in camps_comprovar:
            #Si el camp acaba en nil, pot agafar valors nuls, per tant no el comprovam
            if c.name.endswith("_nil"): continue

            #Si es un Memo tampoc es comprova
            if type(c) is gtk.TextView: continue

            #Comprovam
            if (c.get_text()):
                tenim = True
            else:
                tenim = False
                break

        bt = self.get_widget("bt_"+nom+"_acepta")
        if tenim:
            bt.set_sensitive( True )
        else:
            bt.set_sensitive( False )




    #-- Frmgesjo custom methods }

    #-- Frmgesjo.on_importa {
    def on_importa(self, widget, *args):
        print "on_importa called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_importa }

    #-- Frmgesjo.on_exporta {
    def on_exporta(self, widget, *args):
        print "on_exporta called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_exporta }

    #-- Frmgesjo.on_configura_impressora {
    def on_configura_impressora(self, widget, *args):
        print "on_configura_impressora called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_configura_impressora }

    #-- Frmgesjo.on_surt {
    def on_surt(self, widget, *args):
        print "on_surt called with self.%s" % widget.get_name()
        self.quit()

    #-- Frmgesjo.on_surt }

    #-- Frmgesjo.on_talla {
    def on_talla(self, widget, *args):
        print "on_talla called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_talla }

    #-- Frmgesjo.on_copia {
    def on_copia(self, widget, *args):
        print "on_copia called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_copia }

    #-- Frmgesjo.on_enganxa {
    def on_enganxa(self, widget, *args):
        print "on_enganxa called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_enganxa }

    #-- Frmgesjo.on_esborra {
    def on_esborra(self, widget, *args):
        print "on_esborra called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_esborra }

    #-- Frmgesjo.on_clients {
    def on_clients(self, widget, *args):
        print "on_clients called with self.%s" % widget.get_name()
        self.pestanya.set_current_page( PAG_CLIENT )
    #-- Frmgesjo.on_clients }

    #-- Frmgesjo.on_arreglos {
    def on_arreglos(self, widget, *args):
        print "on_arreglos called with self.%s" % widget.get_name()
        self.pestanya.set_current_page( PAG_ARREGLOS )
    #-- Frmgesjo.on_arreglos }

    #-- Frmgesjo.on_taller {
    def on_taller(self, widget, *args):
        print "on_taller called with self.%s" % widget.get_name()

    #-- Frmgesjo.on_taller }

    #-- Frmgesjo.on_factures {
    def on_factures(self, widget, *args):
        print "on_factures called with self.%s" % widget.get_name()
        self.pestanya.set_current_page( PAG_FACTURES )
    #-- Frmgesjo.on_factures }

    #-- Frmgesjo.on_informes {
    def on_informes(self, widget, *args):
        print "on_informes called with self.%s" % widget.get_name()
        self.pestanya.set_current_page( PAG_INFORMES )
    #-- Frmgesjo.on_informes }

    #-- Frmgesjo.on_manteniment1_activate {
    def on_manteniment1_activate(self, widget, *args):
        print "on_manteniment1_activate called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_manteniment1_activate }

    #-- Frmgesjo.on_manteniment_tallers {
    def on_manteniment_tallers(self, widget, *args):
        print "on_manteniment_tallers called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_manteniment_tallers }

    #-- Frmgesjo.on_manteniment_mecanics {
    def on_manteniment_mecanics(self, widget, *args):
        print "on_manteniment_mecanics called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_manteniment_mecanics }

    #-- Frmgesjo.on_manteniment_marques {
    def on_manteniment_marques(self, widget, *args):
        print "on_manteniment_marques called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_manteniment_marques }

    #-- Frmgesjo.on_quant_a {
    def on_quant_a(self, widget, *args):
        print "on_quant_a called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_quant_a }

    #-- Frmgesjo.on_nou_client {
    def on_nou_client(self, widget, *args):
        print "on_nou_client called with self.%s" % widget.get_name()
        self.bt_client_cancela.show()
        self.bt_client_acepta.show()
        self.bt_client_acepta.set_sensitive(False)
        self.bt_client_cancela.set_sensitive(True)
        self.nou_formulari(widget)


    #-- Frmgesjo.on_nou_client }

    #-- Frmgesjo.on_edita_client {
    def on_edita_client(self, widget, *args):
        print "on_edita_client called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_edita_client }

    #-- Frmgesjo.on_esborra_client {
    def on_esborra_client(self, widget, *args):
        print "on_esborra_client called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_esborra_client }

    #-- Frmgesjo.on_arreglos_client {
    def on_arreglos_client(self, widget, *args):
        print "on_arreglos_client called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_client }

    #-- Frmgesjo.on_imprimir_client {
    def on_imprimir_client(self, widget, *args):
        print "on_imprimir_client called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_imprimir_client }

    #-- Frmgesjo.on_client_test_dades_omplides {
    def on_client_test_dades_omplides(self, widget, *args):
        print "on_client_test_dades_omplides called with self.%s" % widget.get_name()
        self.comprova_camps_buits_formularis(widget)

    #-- Frmgesjo.on_client_test_dades_omplides }

    #-- Frmgesjo.on_client_primer {
    def on_client_primer(self, widget, *args):
        print "on_client_primer called with self.%s" % widget.get_name()

        # Desactivam botons primer i anterior, ja que ja notpodem anar mes enrera
        self.bt_client_primer.set_sensitive( False )
        self.bt_client_anterior.set_sensitive( False )

        # Activam botons darrer i seguent, ja que si estam a l'inici si que podem anar endavant
        self.bt_client_darrer.set_sensitive( True )
        self.bt_client_seguent.set_sensitive( True )
    #-- Frmgesjo.on_client_primer }

    #-- Frmgesjo.on_client_anterior {
    def on_client_anterior(self, widget, *args):
        print "on_client_anterior called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_client_anterior }

    #-- Frmgesjo.on_client_seguent {
    def on_client_seguent(self, widget, *args):
        print "on_client_seguent called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_client_seguent }

    #-- Frmgesjo.on_client_darrer {
    def on_client_darrer(self, widget, *args):
        print "on_client_darrer called with self.%s" % widget.get_name()

        # Desactivam botons darrer i seguent, ja que ja no podem anar mes endavant
        self.bt_client_darrer.set_sensitive( False )
        self.bt_client_seguent.set_sensitive( False )

        # Activam botons primer i anterior, ja que si estam al final si que podem anar endarrera
        self.bt_client_primer.set_sensitive( True )
        self.bt_client_anterior.set_sensitive( True )
    #-- Frmgesjo.on_client_darrer }

    #-- Frmgesjo.on_client_cerca {
    def on_client_cerca(self, widget, *args):
        print "on_client_cerca called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_client_cerca }

    #-- Frmgesjo.on_client_acepta {
    def on_client_acepta(self, widget, *args):
        print "on_client_acepta called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_client_acepta }

    #-- Frmgesjo.on_client_cancela {
    def on_client_cancela(self, widget, *args):
        print "on_client_cancela called with self.%s" % widget.get_name()
        self.bt_client_cancela.set_sensitive( False )
        self.bt_client_acepta.set_sensitive( False )

    #-- Frmgesjo.on_client_cancela }

    #-- Frmgesjo.on_arreglos_nou {
    def on_arreglos_nou(self, widget, *args):
        print "on_arreglos_nou called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_nou }

    #-- Frmgesjo.on_arreglos_edita {
    def on_arreglos_edita(self, widget, *args):
        print "on_arreglos_edita called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_edita }

    #-- Frmgesjo.on_arreglos_elimina {
    def on_arreglos_elimina(self, widget, *args):
        print "on_arreglos_elimina called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_elimina }

    #-- Frmgesjo.on_arreglos_imprimeix {
    def on_arreglos_imprimeix(self, widget, *args):
        print "on_arreglos_imprimeix called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_imprimeix }

    #-- Frmgesjo.on_arreglos_primer {
    def on_arreglos_primer(self, widget, *args):
        print "on_arreglos_primer called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_primer }

    #-- Frmgesjo.on_arreglos_anterior {
    def on_arreglos_anterior(self, widget, *args):
        print "on_arreglos_anterior called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_anterior }

    #-- Frmgesjo.on_arreglos_seguent {
    def on_arreglos_seguent(self, widget, *args):
        print "on_arreglos_seguent called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_seguent }

    #-- Frmgesjo.on_arreglos_darrer {
    def on_arreglos_darrer(self, widget, *args):
        print "on_arreglos_darrer called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_darrer }

    #-- Frmgesjo.on_arreglos_cerca {
    def on_arreglos_cerca(self, widget, *args):
        print "on_arreglos_cerca called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_cerca }

    #-- Frmgesjo.on_arreglos_aplica {
    def on_arreglos_aplica(self, widget, *args):
        print "on_arreglos_aplica called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_aplica }

    #-- Frmgesjo.on_arreglos_cancela {
    def on_arreglos_cancela(self, widget, *args):
        print "on_arreglos_cancela called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_arreglos_cancela }

    #-- Frmgesjo.on_in_arreglos_tots_clicked {
    def on_in_arreglos_tots_clicked(self, widget, *args):
        print "on_in_arreglos_tots_clicked called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_in_arreglos_tots_clicked }

    #-- Frmgesjo.on_bt_in_ar_sobres_clicked {
    def on_bt_in_ar_sobres_clicked(self, widget, *args):
        print "on_bt_in_ar_sobres_clicked called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_bt_in_ar_sobres_clicked }

    #-- Frmgesjo.on_in_llistats_tallers_clicked {
    def on_in_llistats_tallers_clicked(self, widget, *args):
        print "on_in_llistats_tallers_clicked called with self.%s" % widget.get_name()
    #-- Frmgesjo.on_in_llistats_tallers_clicked }


class FrmDlEsborra(AppBase):

    def __init__(self, path="finestres.glade",
                 root="frm_dl_esborra",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        AppBase.__init__(self, path, root, domain, **kwargs)

    #-- FrmDlEsborra.new {
    def new(self):
        print "A new %s has been created" % self.__class__.__name__
    #-- FrmDlEsborra.new }

    #-- FrmDlEsborra custom methods {
    #   Write your own methods here
    #-- FrmDlEsborra custom methods }

    #-- FrmDlEsborra.on_bt_dl_esborra_cancel_clicked {
    def on_bt_dl_esborra_cancel_clicked(self, widget, *args):
        print "on_bt_dl_esborra_cancel_clicked called with self.%s" % widget.get_name()
    #-- FrmDlEsborra.on_bt_dl_esborra_cancel_clicked }

    #-- FrmDlEsborra.on_bt_dl_dacord_clicked {
    def on_bt_dl_dacord_clicked(self, widget, *args):
        print "on_bt_dl_dacord_clicked called with self.%s" % widget.get_name()
    #-- FrmDlEsborra.on_bt_dl_dacord_clicked }


class Frmmarca(AppBase):

    def __init__(self, path="finestres.glade",
                 root="frmmarca",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        AppBase.__init__(self, path, root, domain, **kwargs)

    #-- Frmmarca.new {
    def new(self):
        print "A new %s has been created" % self.__class__.__name__
    #-- Frmmarca.new }

    #-- Frmmarca custom methods {
    #   Write your own methods here
    #-- Frmmarca custom methods }

    #-- Frmmarca.on_bt_ma_nou_clicked {
    def on_bt_ma_nou_clicked(self, widget, *args):
        print "on_bt_ma_nou_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_nou_clicked }

    #-- Frmmarca.on_bt_ma_edita_clicked {
    def on_bt_ma_edita_clicked(self, widget, *args):
        print "on_bt_ma_edita_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_edita_clicked }

    #-- Frmmarca.on_bt_ma_esborra_clicked {
    def on_bt_ma_esborra_clicked(self, widget, *args):
        print "on_bt_ma_esborra_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_esborra_clicked }

    #-- Frmmarca.on_bt_cl_arreglos_clicked {
    def on_bt_cl_arreglos_clicked(self, widget, *args):
        print "on_bt_cl_arreglos_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_cl_arreglos_clicked }

    #-- Frmmarca.on_bt_cl_imprimeix_clicked {
    def on_bt_cl_imprimeix_clicked(self, widget, *args):
        print "on_bt_cl_imprimeix_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_cl_imprimeix_clicked }

    #-- Frmmarca.on_bt_ma_tanca_clicked {
    def on_bt_ma_tanca_clicked(self, widget, *args):
        print "on_bt_ma_tanca_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_tanca_clicked }

    #-- Frmmarca.on_bt_ma_primer_clicked {
    def on_bt_ma_primer_clicked(self, widget, *args):
        print "on_bt_ma_primer_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_primer_clicked }

    #-- Frmmarca.on_bt_ma_anterior_clicked {
    def on_bt_ma_anterior_clicked(self, widget, *args):
        print "on_bt_ma_anterior_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_anterior_clicked }

    #-- Frmmarca.on_bt_ma_seguent_clicked {
    def on_bt_ma_seguent_clicked(self, widget, *args):
        print "on_bt_ma_seguent_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_seguent_clicked }

    #-- Frmmarca.on_bt_ma_darrer_clicked {
    def on_bt_ma_darrer_clicked(self, widget, *args):
        print "on_bt_ma_darrer_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_darrer_clicked }

    #-- Frmmarca.on_bt_ma_cerca_clicked {
    def on_bt_ma_cerca_clicked(self, widget, *args):
        print "on_bt_ma_cerca_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_cerca_clicked }

    #-- Frmmarca.on_bt_ma_aplica_clicked {
    def on_bt_ma_aplica_clicked(self, widget, *args):
        print "on_bt_ma_aplica_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_aplica_clicked }

    #-- Frmmarca.on_bt_ma_cancel_clicked {
    def on_bt_ma_cancel_clicked(self, widget, *args):
        print "on_bt_ma_cancel_clicked called with self.%s" % widget.get_name()
    #-- Frmmarca.on_bt_ma_cancel_clicked }


class Frmtaller(AppBase):

    def __init__(self, path="finestres.glade",
                 root="frmtaller",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        AppBase.__init__(self, path, root, domain, **kwargs)

    #-- Frmtaller.new {
    def new(self):
        print "A new %s has been created" % self.__class__.__name__
    #-- Frmtaller.new }

    #-- Frmtaller custom methods {
    #   Write your own methods here
    #-- Frmtaller custom methods }

    #-- Frmtaller.on_bt_ta_nou_clicked {
    def on_bt_ta_nou_clicked(self, widget, *args):
        print "on_bt_ta_nou_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_nou_clicked }

    #-- Frmtaller.on_bt_ta_edita_clicked {
    def on_bt_ta_edita_clicked(self, widget, *args):
        print "on_bt_ta_edita_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_edita_clicked }

    #-- Frmtaller.on_bt_ta_esborra_clicked {
    def on_bt_ta_esborra_clicked(self, widget, *args):
        print "on_bt_ta_esborra_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_esborra_clicked }

    #-- Frmtaller.on_bt_ta_mecanics_clicked {
    def on_bt_ta_mecanics_clicked(self, widget, *args):
        print "on_bt_ta_mecanics_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_mecanics_clicked }

    #-- Frmtaller.on_button82_clicked {
    def on_button82_clicked(self, widget, *args):
        print "on_button82_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_button82_clicked }

    #-- Frmtaller.on_bt_ta_tanca_clicked {
    def on_bt_ta_tanca_clicked(self, widget, *args):
        print "on_bt_ta_tanca_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_tanca_clicked }

    #-- Frmtaller.on_bt_ta_primer_clicked {
    def on_bt_ta_primer_clicked(self, widget, *args):
        print "on_bt_ta_primer_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_primer_clicked }

    #-- Frmtaller.on_bt_ta_anterior_clicked {
    def on_bt_ta_anterior_clicked(self, widget, *args):
        print "on_bt_ta_anterior_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_anterior_clicked }

    #-- Frmtaller.on_bt_ta_seguent_clicked {
    def on_bt_ta_seguent_clicked(self, widget, *args):
        print "on_bt_ta_seguent_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_seguent_clicked }

    #-- Frmtaller.on_bt_ta_darrer_clicked {
    def on_bt_ta_darrer_clicked(self, widget, *args):
        print "on_bt_ta_darrer_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_darrer_clicked }

    #-- Frmtaller.on_bt_ta_cerca_clicked {
    def on_bt_ta_cerca_clicked(self, widget, *args):
        print "on_bt_ta_cerca_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_cerca_clicked }

    #-- Frmtaller.on_bt_ta_aplica_clicked {
    def on_bt_ta_aplica_clicked(self, widget, *args):
        print "on_bt_ta_aplica_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_aplica_clicked }

    #-- Frmtaller.on_bt_ta_cancel_clicked {
    def on_bt_ta_cancel_clicked(self, widget, *args):
        print "on_bt_ta_cancel_clicked called with self.%s" % widget.get_name()
    #-- Frmtaller.on_bt_ta_cancel_clicked }


class Frmmecanic(AppBase):

    def __init__(self, path="finestres.glade",
                 root="frmmecanic",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        AppBase.__init__(self, path, root, domain, **kwargs)

    #-- Frmmecanic.new {
    def new(self):
        print "A new %s has been created" % self.__class__.__name__
    #-- Frmmecanic.new }

    #-- Frmmecanic custom methods {
    #   Write your own methods here
    #-- Frmmecanic custom methods }

    #-- Frmmecanic.on_bt_me_nou_clicked {
    def on_bt_me_nou_clicked(self, widget, *args):
        print "on_bt_me_nou_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_nou_clicked }

    #-- Frmmecanic.on_bt_me_edita_clicked {
    def on_bt_me_edita_clicked(self, widget, *args):
        print "on_bt_me_edita_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_edita_clicked }

    #-- Frmmecanic.on_bt_me_esborra_clicked {
    def on_bt_me_esborra_clicked(self, widget, *args):
        print "on_bt_me_esborra_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_esborra_clicked }

    #-- Frmmecanic.on_bt_me_tallers_clicked {
    def on_bt_me_tallers_clicked(self, widget, *args):
        print "on_bt_me_tallers_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_tallers_clicked }

    #-- Frmmecanic.on_bt_me_imprimeix_clicked {
    def on_bt_me_imprimeix_clicked(self, widget, *args):
        print "on_bt_me_imprimeix_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_imprimeix_clicked }

    #-- Frmmecanic.on_bt_me_tanca_clicked {
    def on_bt_me_tanca_clicked(self, widget, *args):
        print "on_bt_me_tanca_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_tanca_clicked }

    #-- Frmmecanic.on_bt_me_cerca_taller_clicked {
    def on_bt_me_cerca_taller_clicked(self, widget, *args):
        print "on_bt_me_cerca_taller_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_cerca_taller_clicked }

    #-- Frmmecanic.on_bt_me_primer_clicked {
    def on_bt_me_primer_clicked(self, widget, *args):
        print "on_bt_me_primer_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_primer_clicked }

    #-- Frmmecanic.on_bt_me_anterior_clicked {
    def on_bt_me_anterior_clicked(self, widget, *args):
        print "on_bt_me_anterior_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_anterior_clicked }

    #-- Frmmecanic.on_bt_me_seguent_clicked {
    def on_bt_me_seguent_clicked(self, widget, *args):
        print "on_bt_me_seguent_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_seguent_clicked }

    #-- Frmmecanic.on_bt_me_darrer_clicked {
    def on_bt_me_darrer_clicked(self, widget, *args):
        print "on_bt_me_darrer_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_darrer_clicked }

    #-- Frmmecanic.on_bt_me_cerca_clicked {
    def on_bt_me_cerca_clicked(self, widget, *args):
        print "on_bt_me_cerca_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_cerca_clicked }

    #-- Frmmecanic.on_bt_me_aplica_clicked {
    def on_bt_me_aplica_clicked(self, widget, *args):
        print "on_bt_me_aplica_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_aplica_clicked }

    #-- Frmmecanic.on_bt_me_cancel_clicked {
    def on_bt_me_cancel_clicked(self, widget, *args):
        print "on_bt_me_cancel_clicked called with self.%s" % widget.get_name()
    #-- Frmmecanic.on_bt_me_cancel_clicked }


class Frmbrowse(AppBase):

    def __init__(self, path="finestres.glade",
                 root="frmbrowse",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        AppBase.__init__(self, path, root, domain, **kwargs)

    #-- Frmbrowse.new {
    def new(self):
        print "A new %s has been created" % self.__class__.__name__
    #-- Frmbrowse.new }

    #-- Frmbrowse custom methods {
    #   Write your own methods here
    #-- Frmbrowse custom methods }

    #-- Frmbrowse.on_brw_select_cursor_row {
    def on_brw_select_cursor_row(self, widget, *args):
        print "on_brw_select_cursor_row called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_brw_select_cursor_row }

    #-- Frmbrowse.on_bt_ta_primer_clicked {
    def on_bt_ta_primer_clicked(self, widget, *args):
        print "on_bt_ta_primer_clicked called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_bt_ta_primer_clicked }

    #-- Frmbrowse.on_bt_ta_anterior_clicked {
    def on_bt_ta_anterior_clicked(self, widget, *args):
        print "on_bt_ta_anterior_clicked called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_bt_ta_anterior_clicked }

    #-- Frmbrowse.on_bt_ta_seguent_clicked {
    def on_bt_ta_seguent_clicked(self, widget, *args):
        print "on_bt_ta_seguent_clicked called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_bt_ta_seguent_clicked }

    #-- Frmbrowse.on_bt_ta_darrer_clicked {
    def on_bt_ta_darrer_clicked(self, widget, *args):
        print "on_bt_ta_darrer_clicked called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_bt_ta_darrer_clicked }

    #-- Frmbrowse.on_bt_sel_si_clicked {
    def on_bt_sel_si_clicked(self, widget, *args):
        print "on_bt_sel_si_clicked called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_bt_sel_si_clicked }

    #-- Frmbrowse.on_bt_sel_cancel_clicked {
    def on_bt_sel_cancel_clicked(self, widget, *args):
        print "on_bt_sel_cancel_clicked called with self.%s" % widget.get_name()
    #-- Frmbrowse.on_bt_sel_cancel_clicked }


#-- main {

def main():
    frmgesjo = Frmgesjo()
    frm_dl_esborra = FrmDlEsborra()
    frmmarca = Frmmarca()
    frmtaller = Frmtaller()
    frmmecanic = Frmmecanic()
    frmbrowse = Frmbrowse()

    frmgesjo.run()

if __name__ == "__main__":
    main()

#-- main }
